////////////////////////////////////////////////////////////////////////////////

// Cluster and annotate OTUs, make a rarefied, copy-corrected microbial profile and graph

// Input is:
// 1/ *.fna: FASTA reads, clean, trimmed to the same length, and named by sample
// 2/ *.fna: FASTA file containing the two primers used (the first primer should
//           be the one from which sequencing is started)

// Usage example: bpipe run pipeline_analyze.groovy sediments_QA.fna fwd_primer.fna

// Options:

// Flag to prevent singleton sequences to constitute an OTU
SKIP_RM_SINGLETONS=0

// Minimum identity percent for OTU clustering
OTU_MIN_IDENTITY=97.0

// Flag to remove reference-based chimeras
EXCLUDE_CHIMERAS=1

// Database for chimera detection
CHIMERA_DB="/srv/db/gold/micrombiomeutils_r20110519_GOLD.fna"

// File containing the lineages for the desired taxonomic system
TAXO_STR="/srv/db/merged_gg_silva/gg201210_silva115/merged_gg_silva_99clust_taxo.txt"

// FASTA file containing sequences in the desired taxonomic system
TAXO_DB="/srv/db/merged_gg_silva/gg201210_silva115/merged_gg_silva_99clust_seqs.fna"

// Minimum identity percent for the taxonomic assignment
TAXO_MIN_IDENTITY=90.0
//TAXO_MIN_IDENTITY=95.0
//Rule of thumb: >97% indicates the same species, >95% the same genus

// Samples to merge
MERGE_SAMPLES=""

// OTUs to remove (case-insensitive)
REMOVE_OTUS="Eukaryota"

// Rarefaction depth (number of reads per sample)
RAREFACTION_DEPTH=1000

// CopyRighter gene copy number database
GCN_DB="/srv/db/copyrighter/ssu_img40_gg201210_merged.txt"

////////////////////////////////////////////////////////////////////////////////


about title: "hitman_execute - Amplicon analysis and OTU table creation" 


uparse_otu = segment {
   // Run the UPARSE OTU clustering pipeline
   // Input is amplicon reads in FASTA (*.fna)
   // Output is OTU reference sequences in FASTA (*.otus)
   dereplicate +
   rm_singletons.using(skip:SKIP_RM_SINGLETONS) +
   otu_clustering.using(perc:OTU_MIN_IDENTITY) +
   rm_chimeras.using(db:CHIMERA_DB)
}


make_otu_table = segment {
   // Convert microbial profile from UCLUST format to generic, and then to biom
   uclust2generic + generic2biom + desc2id
}


assign_taxo_global = segment {
   extract_amplicons.using(db:TAXO_DB) +
   usearch_global.using(perc:TAXO_MIN_IDENTITY)
}


add_taxonomy = segment {
   id2tax +
   desc2tax.using(db:TAXO_STR)
}


//
// Remove samples
//
// Merge samples
//
// Remove euks
//
//  ... rarefaction ...
//
// CopyRighter
//
// Heatmap
//
// Alpha diversity
//
// Beta diversity
//


Bpipe.run {
   uparse_otu +
   otu_mapping.using(perc:OTU_MIN_IDENTITY) +
   [make_otu_table, assign_taxo_global] +
   add_taxonomy +
   rarefy.using(num:RAREFACTION_DEPTH) +
   final_report
}
